C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN led.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE led.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #define uchar unsigned char      //宏的定义变量类型 uchar 代替 unsigned char
   3          #define uint  unsigned int       //宏的定义变量类型 uint  代替 unsigned int
   4          uchar  dis_buf;            //显示缓存
   5          uchar  temp;
   6          uchar  key,a,b,c,d,e,f,g,h,k,m,n,p,q,r,s,t,bb,cc;                //键顺序码
   7          void delay(uchar x);      //x*0.14MS
   8          
   9          #define LCDLCDDisp_Off   0x3e
  10          #define LCDLCDDisp_On    0x3f
  11          #define Page_Add     0xb8//页地址
  12          #define LCDCol_Add     0x40//列地址
  13          #define Start_Line     0xC0//行地址
  14          /*****液晶显示器的端口定义*****/
  15          #define data_ora P0 /*液晶数据总线*/
  16          sbit LCDMcs=P2^1 ;    /*片选1*/
  17          sbit LCDScs=P2^2 ;    /*片选2*/
  18          sbit RESET=P2^3 ;  /*复位信号*/
  19          sbit LCDDi=P2^4 ;     /*数据/指令 选择*/
  20          sbit LCDRW=P2^5 ;     /*读/写 选择*/
  21          sbit LCDEnable=P2^6 ;     /*读/写 使能*/
  22          sbit led_up=P3^4 ;
  23          sbit led_dn=P3^5 ;
  24          
  25          sbit IN1=P3^0;
  26          sbit IN2=P3^1; 
  27          sbit IN3=P3^2;
  28          sbit IN4=P3^3;
  29          
  30          sbit key2=P2^0;
  31          sbit bell=P3^6;
  32          sbit LED_BJ=P3^7;
  33          unsigned int Num0=0,Num1=0,Num2=0,Num3=0,Num4=0,Num5=0,Num6=0;
  34          bit flag0,flag_up,flag_dn,flag_door,flag_keyoff,flag_bb,flag_cc,flag1,flag2,flag3,flag4,flag5,flag6,flag7,
             -flag8,flag9;
  35          bit flag_1_up, flag_2_up,flag_2_dn, flag_3_up,flag_3_dn,flag_4_dn;
  36          
  37          unsigned char code Bmp0[]=
  38          {
  39          /*------------------------------------------------------------------------------
  40            源文件 / 文字 : 来自剪贴板! /已选楼层
  41            宽×高（像素）: 64×16
  42            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
  43            数据转换日期  : 2018-6-22 
  44          ------------------------------------------------------------------------------*/
  45          0x00,0x02,0xF2,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0xFF,0x02,0x00,0x00,0x00,
  46          0x40,0x42,0x44,0xCC,0x00,0x60,0x5E,0x48,0xC8,0x7F,0xC8,0x48,0x4C,0x68,0x40,0x00,
  47          0x10,0x10,0xD0,0xFF,0x50,0x90,0x52,0x34,0x10,0xFF,0x10,0x34,0x52,0xD8,0x10,0x00,
  48          0x00,0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0xD2,0x92,0x1F,0x02,0x00,
  49          0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x78,0x00,0x00,
  50          0x00,0x40,0x20,0x1F,0x20,0x60,0x90,0x8C,0x83,0x80,0x8F,0x90,0x90,0xD0,0x5C,0x00,
  51          0x04,0x03,0x00,0xFF,0x02,0x82,0x8A,0x56,0x53,0x22,0x52,0x52,0x8E,0x02,0x02,0x00,
  52          0x80,0x40,0x30,0x0F,0x44,0x64,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC6,0x04,0x00
  53          };
  54          unsigned char code Bmp1[]=
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 2   

  55          {
  56          /*------------------------------------------------------------------------------
  57            源文件 / 文字 : 来自剪贴板!/当前楼层
  58            宽×高（像素）: 64×16
  59            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
  60            数据转换日期  : 2018-6-22 
  61            ------------------------------------------------------------------------------*/
  62          0x00,0x40,0x42,0x44,0x4C,0x40,0x40,0x7F,0x40,0x40,0x48,0x44,0xE6,0x40,0x00,0x00,
  63          0x08,0x08,0xE8,0x29,0x2A,0x2E,0xE8,0x08,0x08,0xCC,0x0A,0x0B,0xE8,0x0C,0x08,0x00,
  64          0x10,0x10,0xD0,0xFF,0x50,0x90,0x52,0x34,0x10,0xFF,0x10,0x34,0x52,0xD8,0x10,0x00,
  65          0x00,0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0xD2,0x92,0x1F,0x02,0x00,
  66          0x00,0x40,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xFF,0x00,0x00,0x00,
  67          0x00,0x00,0xFF,0x09,0x49,0x89,0x7F,0x00,0x00,0x0F,0x40,0x80,0x7F,0x00,0x00,0x00,
  68          0x04,0x03,0x00,0xFF,0x02,0x82,0x8A,0x56,0x53,0x22,0x52,0x52,0x8E,0x02,0x02,0x00,
  69          0x80,0x40,0x30,0x0F,0x44,0x64,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC6,0x04,0x00
  70          };
  71          unsigned char code Bmp2[]=
  72          {
  73          /*------------------------------------------------------------------------------
  74            源文件 / 文字 : 来自剪贴板!/升降状态
  75            宽×高（像素）: 64×16
  76            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
  77            数据转换日期  : 2018-6-22 
  78            ------------------------------------------------------------------------------*/
  79          0x80,0x84,0x84,0x84,0x84,0xFE,0x82,0x83,0x82,0x80,0xFF,0x80,0x80,0xC0,0x80,0x00,
  80          0x00,0xFE,0x02,0x22,0xDA,0x06,0x88,0x44,0x57,0xA4,0x54,0x4C,0x84,0x80,0x80,0x00,
  81          0x00,0x08,0x30,0x00,0xFF,0x20,0x20,0x20,0x20,0xFF,0x20,0x22,0x24,0x30,0x20,0x00,
  82          0x04,0x04,0x84,0x84,0x44,0x24,0x54,0x8F,0x14,0x24,0x44,0x44,0x84,0x86,0x84,0x00,
  83          0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,
  84          0x00,0xFF,0x08,0x10,0x08,0x07,0x10,0x1E,0x12,0xFF,0x12,0x12,0x18,0x11,0x00,0x00,
  85          0x08,0x0C,0x02,0x01,0xFF,0x40,0x20,0x1C,0x03,0x00,0x03,0x0C,0x30,0x60,0x20,0x00,
  86          0x01,0x21,0x1C,0x00,0x3C,0x40,0x42,0x4C,0x40,0x40,0x70,0x04,0x08,0x31,0x00,0x00
  87          };
  88          unsigned char code Bmp3[]=
  89          {
  90          /*------------------------------------------------------------------------------
  91            源文件 / 文字 : 来自剪贴板!/开门状态
  92            宽×高（像素）: 64×16
  93            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
  94            数据转换日期  : 2018-6-22 
  95            ------------------------------------------------------------------------------*/
  96          0x80,0x82,0x82,0x82,0xFE,0x82,0x82,0x82,0x82,0x82,0xFE,0x82,0x83,0xC2,0x80,0x00,
  97          0x00,0xFC,0x01,0x02,0x06,0x00,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0xFF,0x02,0x00,
  98          0x00,0x08,0x30,0x00,0xFF,0x20,0x20,0x20,0x20,0xFF,0x20,0x22,0x24,0x30,0x20,0x00,
  99          0x04,0x04,0x84,0x84,0x44,0x24,0x54,0x8F,0x14,0x24,0x44,0x44,0x84,0x86,0x84,0x00,
 100          0x00,0x80,0x40,0x30,0x0F,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,
 101          0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,
 102          0x08,0x0C,0x02,0x01,0xFF,0x40,0x20,0x1C,0x03,0x00,0x03,0x0C,0x30,0x60,0x20,0x00,
 103          0x01,0x21,0x1C,0x00,0x3C,0x40,0x42,0x4C,0x40,0x40,0x70,0x04,0x08,0x31,0x00,0x00
 104          };
 105          unsigned char code Bmp4[]=
 106          {
 107          /*------------------------------------------------------------------------------
 108            源文件 / 文字 : 来自剪贴板!/  上升  
 109            宽×高（像素）: 64×16
 110            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 111            数据转换日期  : 2018-6-22 
 112            ------------------------------------------------------------------------------*/
 113          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x20,0x20,0x20,0x30,0x20,0x00,0x00,0x00,
 115          0x80,0x84,0x84,0x84,0x84,0xFE,0x82,0x83,0x82,0x80,0xFF,0x80,0x80,0xC0,0x80,0x00,
 116          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 3   

 117          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 118          0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7F,0x40,0x40,0x40,0x40,0x40,0x60,0x40,0x00,
 119          0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,
 120          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 121          };
 122          unsigned char code Bmp5[]=
 123          {
 124          /*------------------------------------------------------------------------------
 125            源文件 / 文字 : 来自剪贴板!/  下降  
 126            宽×高（像素）: 64×16
 127            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 128            数据转换日期  : 2018-6-22 
 129            ------------------------------------------------------------------------------*/
 130          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 131          0x02,0x02,0x02,0x02,0x02,0x02,0xFE,0x02,0x22,0x42,0x82,0x82,0x02,0x03,0x02,0x00,
 132          0x00,0xFE,0x02,0x22,0xDA,0x06,0x88,0x44,0x57,0xA4,0x54,0x4C,0x84,0x80,0x80,0x00,
 133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 135          0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
 136          0x00,0xFF,0x08,0x10,0x08,0x07,0x10,0x1E,0x12,0xFF,0x12,0x12,0x18,0x11,0x00,0x00,
 137          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 138          };
 139          unsigned char code Bmp6[]=
 140          {
 141          /*------------------------------------------------------------------------------
 142            源文件 / 文字 : 来自剪贴板!/  打开  
 143            宽×高（像素）: 64×16
 144            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 145            数据转换日期  : 2018-6-22 
 146            ------------------------------------------------------------------------------*/
 147          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 148          0x10,0x10,0x10,0xFF,0x90,0x50,0x08,0x08,0x08,0x08,0xF8,0x08,0x08,0x0C,0x08,0x00,
 149          0x80,0x82,0x82,0x82,0xFE,0x82,0x82,0x82,0x82,0x82,0xFE,0x82,0x83,0xC2,0x80,0x00,
 150          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 151          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 152          0x02,0x42,0x81,0x7F,0x00,0x00,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,
 153          0x00,0x80,0x40,0x30,0x0F,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,
 154          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 155          };
 156          unsigned char code Bmp7[]=
 157          {
 158          /*------------------------------------------------------------------------------
 159            源文件 / 文字 : 来自剪贴板!/  关闭  
 160            宽×高（像素）: 64×16
 161            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 162            数据转换日期  : 2018-6-22 
 163            ------------------------------------------------------------------------------*/
 164          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 165          0x00,0x10,0x10,0x11,0x12,0x1C,0x10,0xF0,0x10,0x18,0x14,0x13,0x1A,0x90,0x00,0x00,
 166          0x00,0xF8,0x01,0x22,0x26,0x20,0x22,0xA2,0xFA,0x22,0x32,0x22,0x02,0xFF,0x02,0x00,
 167          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 168          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 169          0x81,0x81,0x41,0x41,0x21,0x11,0x0D,0x03,0x0D,0x11,0x21,0x21,0x41,0xC1,0x41,0x00,
 170          0x00,0xFF,0x00,0x08,0x04,0x02,0x21,0x40,0x3F,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,
 171          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 172          };
 173          unsigned char code Bmp8[]=
 174          {
 175          /*------------------------------------------------------------------------------
 176            源文件 / 文字 : 来自剪贴板!/  1 层  
 177            宽×高（像素）: 64×16
 178            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 4   

 179            数据转换日期  : 2018-6-22 
 180            ------------------------------------------------------------------------------*/
 181          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 182          0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 183          0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x9E,0x00,0x00,
 184          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 185          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 186          0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 187          0x80,0x60,0x1F,0x04,0x44,0xE4,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC4,0x04,0x00,
 188          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 189          
 190          };
 191          unsigned char code Bmp9[]=
 192          {
 193          /*------------------------------------------------------------------------------
 194            源文件 / 文字 : 来自剪贴板!/  2 层  
 195            宽×高（像素）: 64×16
 196            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 197            数据转换日期  : 2018-6-22 
 198            ------------------------------------------------------------------------------*/
 199          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 200          0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 201          0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x9E,0x00,0x00,
 202          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 203          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 204          0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 205          0x80,0x60,0x1F,0x04,0x44,0xE4,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC4,0x04,0x00,
 206          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 207          
 208          };
 209          unsigned char code Bmp10[]=
 210          {
 211          /*------------------------------------------------------------------------------
 212            源文件 / 文字 : 来自剪贴板!/  3 层  
 213            宽×高（像素）: 64×16
 214            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 215            数据转换日期  : 2018-6-22 
 216            ------------------------------------------------------------------------------*/
 217          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 218          0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 219          0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x9E,0x00,0x00,
 220          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 221          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 222          0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 223          0x80,0x60,0x1F,0x04,0x44,0xE4,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC4,0x04,0x00,
 224          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 225          };
 226          unsigned char code Bmp11[]=
 227          {
 228          /*------------------------------------------------------------------------------
 229            源文件 / 文字 : 来自剪贴板!/  4 层  
 230            宽×高（像素）: 64×16
 231            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 232            数据转换日期  : 2018-6-22 
 233            ------------------------------------------------------------------------------*/
 234          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 235          0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 236          0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0x9E,0x00,0x00,
 237          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 238          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 239          0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 240          0x80,0x60,0x1F,0x04,0x44,0xE4,0x54,0x4C,0x44,0x44,0x44,0x54,0x64,0xC4,0x04,0x00,
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 5   

 241          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 242          
 243          };
 244          unsigned char code Bmp12[]=
 245          {
 246          /*------------------------------------------------------------------------------
 247            源文件 / 文字 : 来自剪贴板!/  等待  
 248            宽×高（像素）: 64×16
 249            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 250            数据转换日期  : 2018-6-22 
 251            ------------------------------------------------------------------------------*/
 252          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 253          0x00,0x08,0x44,0x47,0x4C,0x56,0x44,0xF8,0x44,0x47,0x4C,0x54,0x46,0x04,0x00,0x00,
 254          0x00,0x10,0x88,0xC4,0x33,0x40,0x44,0x44,0x44,0x7F,0x44,0xC4,0x46,0x64,0x40,0x00,
 255          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 256          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 257          0x01,0x01,0x09,0x09,0x19,0x29,0x09,0x49,0x89,0x7F,0x09,0x0D,0x09,0x01,0x01,0x00,
 258          0x02,0x01,0x00,0xFF,0x00,0x02,0x0A,0x32,0x02,0x42,0x82,0x7F,0x02,0x03,0x02,0x00,
 259          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 260          };
 261          unsigned char code Bmp13[]=
 262          {
 263          /*------------------------------------------------------------------------------
 264            源文件 / 文字 : 来自剪贴板!/  暂停  
 265            宽×高（像素）: 64×16
 266            字模格式/大小 : 单色点阵液晶字模，纵向取模，字节倒序/256字节
 267            数据转换日期  : 2018-6-22 
 268            ------------------------------------------------------------------------------*/
 269          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 270          0x40,0x52,0x5A,0x57,0xFA,0x52,0x52,0x80,0x7E,0x12,0x12,0xF2,0x11,0x19,0x10,0x00,
 271          0x40,0x20,0xF8,0x07,0x00,0x04,0x74,0x54,0x55,0x56,0x54,0x54,0x76,0x04,0x00,0x00,
 272          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 273          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 274          0x00,0x00,0x00,0xFC,0x55,0x54,0x55,0x54,0x54,0x54,0x54,0xFF,0x04,0x00,0x00,0x00,
 275          0x00,0x00,0xFF,0x04,0x03,0x01,0x05,0x45,0x85,0x7D,0x05,0x05,0x01,0x05,0x03,0x00,
 276          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 277          };
 278          
 279          
 280          void system_Ini()
 281          {
 282   1           TMOD = 0x00; //选择模式0  13位计数 最大计数8192
 283   1               TH0 = (8192 - 1000)/32;
 284   1               TL0 = (8192 - 1000)%32 ;
 285   1           IE = 0x8A;   //中断        
 286   1           TR0  = 1;    //开启T0定时器
 287   1      }
 288          
 289          
 290          
 291          void  delay(uchar x)
 292          { uchar j;
 293   1          while((x--)!=0)  //CPU执行x*12次
 294   1          { for(j=0;j<125;j++)
 295   2               {;}
 296   2          }
 297   1      }
 298          
 299           void  keyscan(void)
 300           {      temp = 0;
 301   1          P1=0xF0;                 //高四位输入   列为高电平  行为低电平
 302   1          delay(1);                            //延时
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 6   

 303   1              temp=P1;                 //读P1口 
 304   1          temp=temp&0xF0;                      //屏蔽低四位
 305   1          temp=~((temp>>4)|0xF0);       
 306   1          if(temp==1)   // p1.4 被拉低
 307   1              key=1;  //第1个按键键值
 308   1          else if(temp==2)   // p1.5 被拉低
 309   1              key=2;    //第2个按键键值
 310   1          else if(temp==4)   // p1.6 被拉低
 311   1              key=3;   //第3个按键键值
 312   1          else if(temp==8)   // p1.7 被拉低
 313   1               key=4;   //第4个按键键值
 314   1              else
 315   1                 key = 0;      //16
 316   1              
 317   1          P1=0x0F;             //低四位输入  行为高电平 列为低电平
 318   1          delay(1);                    //延时
 319   1              temp=P1;             //读P1口       
 320   1          temp=temp&0x0F;
 321   1          temp=~(temp|0xF0);
 322   1               if(temp==1)
 323   1                      key=key+0;
 324   1          else if(temp==2)               //第一行  p1.1  被拉低(直接temp==2 是因为我们P1.0空的，是3*4的矩阵键盘)
 325   1              key=key+4; 
 326   1          else if(temp==4)   //第二行  p1.2  被拉低
 327   1              key=key+8;
 328   1          else if(temp==8)   //第三行 p1.3  被拉低
 329   1              key=key+12;
 330   1              else
 331   1                key = 0;
 332   1       
 333   1              
 334   1           dis_buf = key;         //键值入显示缓存
 335   1           dis_buf = dis_buf & 0x0f;
 336   1       
 337   1       }
 338            void  keydown(void)
 339           {  
 340   1              P1=0xF0;       //将高4位全部置1 低四位全部置0
 341   1              if(P1!=0xF0)  //判断按键是否按下 如果按钮按下 会拉低P1其中的一个端口
 342   1              {
 343   2                keyscan();  //调用按键扫描程序
 344   2          }
 345   1       }
 346          /****************************************************************************
 347          函数功能:LCD延时程序
 348          入口参数:t
 349          出口参数:
 350          ****************************************************************************/
 351          void LCDdelay(unsigned int t)
 352          {
 353   1              unsigned int i,j;
 354   1              for(i=0;i<t;i++);
 355   1              for(j=0;j<10;j++);
 356   1      }
 357          /****************************************************************************
 358          状态检查，LCD是否忙
 359          
 360          
 361          *****************************************************************************/
 362          void CheckState()               
 363          {
 364   1         unsigned char dat,DATA;//状态信息（判断是否忙）
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 7   

 365   1         LCDDi=0; // 数据\指令选择，D/I（RS）="L" ，表示 DB7∽DB0 为显示指令数据 
 366   1         LCDRW=1; //R/W="H" ，E="H"数据被读到DB7∽DB0 
 367   1         do
 368   1         {
 369   2            DATA=0x00;
 370   2            LCDEnable=1;      //EN下降源
 371   2                LCDdelay(2);//延时
 372   2                dat=DATA;
 373   2            LCDEnable=0;
 374   2            dat=0x80 & dat; //仅当第7位为0时才可操作(判别busy信号)
 375   2          }
 376   1          while(!(dat==0x00));
 377   1      }
 378          /*****************************************************************************
 379          函数功能:写命令到LCD程序，RS(DI)=L,RW=L,EN=H，即来一个脉冲写一次
 380          入口参数:cmdcode
 381          出口参数:
 382          *****************************************************************************/
 383          void write_com(unsigned char cmdcode)
 384          {
 385   1          CheckState();//检测LCD是否忙
 386   1              LCDDi=0;
 387   1              LCDRW=0;
 388   1              P0=cmdcode;             
 389   1              LCDdelay(2);
 390   1              LCDEnable=1;
 391   1              LCDdelay(2);
 392   1              LCDEnable=0;
 393   1      }
 394          /*****************************************************************************
 395          函数功能:LCD初始化程序
 396          入口参数:
 397          出口参数:
 398          *****************************************************************************/
 399          void init_lcd()
 400          {
 401   1              system_Ini();
 402   1              LCDdelay(100);  
 403   1              LCDMcs=1;//刚开始关闭两屏
 404   1              LCDScs=1;
 405   1              LCDdelay(100);
 406   1              write_com(LCDLCDDisp_Off);       //写初始化命令
 407   1              write_com(Page_Add+0);
 408   1              write_com(Start_Line+0);
 409   1              write_com(LCDCol_Add+0);
 410   1              write_com(LCDLCDDisp_On);
 411   1      
 412   1      
 413   1      }
 414          /*****************************************************************************
 415          函数功能:写数据到LCD程序，RS(DI)=H,RW=L,EN=H，即来一个脉冲写一次
 416          入口参数:LCDDispdata
 417          出口参数:
 418          *****************************************************************************/
 419          void write_data(unsigned char LCDDispdata)
 420          {
 421   1          CheckState();//检测LCD是否忙
 422   1              LCDDi=1;
 423   1              LCDRW=0;
 424   1              P0=LCDDispdata;
 425   1              LCDdelay(2);
 426   1              LCDEnable=1;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 8   

 427   1              LCDdelay(2);
 428   1              LCDEnable=0;
 429   1      }
 430          /*****************************************************************************
 431          函数功能:清除LCD内存程序
 432          入口参数:pag,col,hzk
 433          出口参数:
 434          *****************************************************************************/
 435          void Clr_Scr()
 436          {
 437   1              unsigned char j,k;
 438   1              LCDMcs=0; //左、右屏均开显示
 439   1              LCDScs=0;
 440   1              write_com(Page_Add+0);
 441   1              write_com(LCDCol_Add+0);
 442   1              for(k=0;k<8;k++)//控制页数0-7，共8页
 443   1              {
 444   2                      write_com(Page_Add+k); //每页每页进行写
 445   2                      for(j=0;j<64;j++)  //每页最多可写32个中文文字或64个ASCII字符
 446   2                      {
 447   3                      write_com(LCDCol_Add+j);
 448   3                              write_data(0x00);//控制列数0-63，共64列，写点内容，列地址自动加1
 449   3                      }
 450   2              }
 451   1      }
 452          /*****************************************************************************
 453          函数功能:左屏位置显示
 454          入口参数:page,column,hzk
 455          出口参数:
 456          *****************************************************************************/
 457          void Bmp_Left_Disp(unsigned char page,unsigned char column, unsigned char code *Bmp)
 458          {
 459   1              unsigned char j=0,i=0;
 460   1              for(j=0;j<2;j++)
 461   1              {
 462   2                      write_com(Page_Add+page+j);
 463   2                      write_com(LCDCol_Add+column);
 464   2                      for(i=0;i<64;i++) 
 465   2                              write_data(Bmp[128*j+i]);
 466   2              }
 467   1      }
 468          void Bmp_Left_Disp1(unsigned char page,unsigned char column, unsigned char code *Bmp)
 469          {
 470   1              unsigned char j=0,i=0;
 471   1              for(j=0;j<2;j++)
 472   1              {
 473   2                      write_com(Page_Add+page+j);
 474   2                      write_com(LCDCol_Add+column);
 475   2                      for(i=0;i<64;i++) 
 476   2                              write_data(Bmp[64*j+i]);
 477   2              }
 478   1      }
 479          
 480          
 481          /*****************************************************************************
 482          函数功能:右屏位置显示
 483          入口参数:page,column,hzk
 484          出口参数:
 485          *****************************************************************************/
 486          void Bmp_Right_Disp(unsigned char page,unsigned char column, unsigned char code *Bmp)
 487          {
 488   1              unsigned char j=0,i=0;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 9   

 489   1              for(j=0;j<2;j++)
 490   1              {
 491   2                      write_com(Page_Add+page+j);
 492   2                      write_com(LCDCol_Add+column);
 493   2                      for(i=64;i<128;i++) 
 494   2                              write_data(Bmp[128*j+i]);
 495   2              }
 496   1      }
 497          void Bmp_Right_Disp1(unsigned char page,unsigned char column, unsigned char code *Bmp)
 498          {
 499   1              unsigned char j=0,i=0;
 500   1              for(j=0;j<2;j++)
 501   1              {
 502   2                      write_com(Page_Add+page+j);
 503   2                      write_com(LCDCol_Add+column);
 504   2                      for(i=0;i<64;i++) 
 505   2                              write_data(Bmp[64*j+i]);
 506   2              }
 507   1      }
 508          
 509          void main()
 510          {
 511   1              init_lcd();
 512   1              Clr_Scr();
 513   1              LCDMcs=0; //左屏开显示
 514   1              LCDScs=1;
 515   1              Bmp_Left_Disp1(0,0,Bmp0);
 516   1              Bmp_Left_Disp1(2,0,Bmp1);
 517   1              Bmp_Left_Disp1(4,0,Bmp2);
 518   1              Bmp_Left_Disp1(6,0,Bmp3);
 519   1      
 520   1          LCDMcs=1; //右屏开显示
 521   1              LCDScs=0;
 522   1      
 523   1              Bmp_Right_Disp1(0,0,Bmp8);
 524   1              Bmp_Right_Disp1(2,0,Bmp8);
 525   1              Bmp_Right_Disp1(4,0,Bmp12);
 526   1              Bmp_Right_Disp1(6,0,Bmp7);
 527   1      
 528   1              P3=0xFF;                    //置P0口
 529   1          P1=0xFF;                    //置P1口  
 530   1          delay(10);                  //延时
 531   1      
 532   1              led_up=1 ;
 533   1              led_dn=1 ;
 534   1              b=0;
 535   1              c=0;
 536   1      
 537   1              d=1;
 538   1              e=1;
 539   1      
 540   1              g=0; // 二楼召唤标志
 541   1              h=0; // 三楼召唤标志
 542   1              f=0; // 四楼召唤标志
 543   1      
 544   1              Num0=0;
 545   1              LED_BJ=1;
 546   1      
 547   1              while(1)
 548   1          {
 549   2                      keydown();       //调用按键判断检测程序
 550   2                      a =key;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 10  

 551   2                      if(a==0)
 552   2                      flag_keyoff=0;
 553   2      
 554   2                      if(a==11)
 555   2                      flag_1_up=1;
 556   2                      if(a==9)
 557   2                      flag_2_up=1;
 558   2                      if(a==10)
 559   2                      flag_2_dn=1;
 560   2                      if(a==7)
 561   2                      flag_3_up=1;
 562   2                      if(a==8)
 563   2                      flag_3_dn=1;
 564   2                      if(a==6)
 565   2                      flag_4_dn=1;
 566   2      
 567   2                      /*
 568   2                      if(a==11&&flag_keyoff==0)                 
 569   2                      {       
 570   2                              flag_1_up=1;
 571   2                              flag_keyoff=1;
 572   2                      }*/
 573   2                      if(a==11&&d==1&&e==1&&flag_door==0&&flag_up==0&&flag_dn==0)
 574   2                      {
 575   3                       flag_door=1;
 576   3                       Num2=5000;
 577   3                       Bmp_Right_Disp1(6,0,Bmp6);
 578   3      
 579   3      
 580   3                       a=0;
 581   3                                       
 582   3                      }
 583   2                      if((a==9||a==10)&&d==2&&e==2&&flag_door==0&&flag_up==0&&flag_dn==0)
 584   2                      {
 585   3                       flag_door=1;
 586   3                       Num2=5000;
 587   3                       Bmp_Right_Disp1(6,0,Bmp6);     
 588   3                       flag_2_up=0;
 589   3                       flag_2_dn=0;
 590   3                       
 591   3              
 592   3                       a=0;
 593   3                               
 594   3                      }
 595   2                      if((a==7||a==8)&&d==3&&e==3&&flag_door==0&&flag_up==0&&flag_dn==0)
 596   2                      {
 597   3                       flag_door=1;
 598   3                       Num2=5000;
 599   3                       Bmp_Right_Disp1(6,0,Bmp6);
 600   3                       flag_3_up=0;
 601   3                       flag_3_dn=0;
 602   3                       
 603   3      
 604   3                       a=0;            
 605   3                      }
 606   2      
 607   2      
 608   2                      if(a==6&&d==4&&e==4&&flag_door==0&&flag_up==0&&flag_dn==0)
 609   2                      {
 610   3                       flag_door=1;
 611   3                       Num2=5000;
 612   3                       Bmp_Right_Disp1(6,0,Bmp6);     
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 11  

 613   3                       
 614   3      
 615   3                       a=0;
 616   3                               
 617   3                      }
 618   2                      if(d==1&&e==1&&flag_door==1)
 619   2                      flag_1_up=1;
 620   2                      if(d==2&&e==2&&flag_door==1)
 621   2                      {
 622   3                              flag_2_up=0;
 623   3                              flag_2_dn=0;
 624   3                      }
 625   2                      if(d==3&&e==3&&flag_door==1)
 626   2                      {
 627   3                              flag_3_up=0;
 628   3                              flag_3_dn=0;
 629   3                      }
 630   2                      if(d==4&&e==4&&flag_door==1)
 631   2                      flag_4_dn=0;
 632   2                      
 633   2      
 634   2      
 635   2      
 636   2                      if(flag_door==1&&a==4)          //关门
 637   2                      {
 638   3                              flag_door=0;
 639   3                              Bmp_Right_Disp1(6,0,Bmp7);
 640   3                              Num2=0;
 641   3                              if(flag_bb==1)
 642   3                              {
 643   4                               b=bb;
 644   4                               bb=0;
 645   4                               flag_up=1;
 646   4                               Bmp_Right_Disp1(4,0,Bmp4);
 647   4                               flag_bb=0;
 648   4                              }
 649   3                              else if(flag_cc==1)
 650   3                              {
 651   4                                      c=cc;
 652   4                                      cc=0;
 653   4                                      flag_dn=1;
 654   4                                      Bmp_Right_Disp1(4,0,Bmp5);
 655   4                                      flag_cc=0;
 656   4                              }
 657   3                      }
 658   2                      if(flag_door==0&&a==5&&flag_keyoff==0&&d==e)            //开门
 659   2                      {
 660   3                              flag_door=1;
 661   3                              Num2=5000;
 662   3                              Bmp_Right_Disp1(6,0,Bmp6);
 663   3      
 664   3      
 665   3                              a=0;
 666   3                      }
 667   2      
 668   2      
 669   2                      if(d==1&&e==1&&flag_up==0&&flag_dn==0&&(a==2||a==9||a==10)&&flag_door==0&&flag_keyoff==0)
 670   2                      {
 671   3                       d=2;
 672   3                       flag_up=1;
 673   3                       b=5;
 674   3                       Bmp_Right_Disp1(0,0,Bmp9);
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 12  

 675   3                       Bmp_Right_Disp1(4,0,Bmp4);
 676   3                       if(a==9)
 677   3                       flag_2_up=0;
 678   3                       flag_2_dn=0;
 679   3      
 680   3      
 681   3                      }
 682   2                      else if(d==1&&e==1&&flag_up==0&&flag_dn==0&&(a==12||a==7||a==8)&&flag_door==0&&flag_keyoff==0)
 683   2                      {
 684   3                       d=3;
 685   3                       flag_up=1;
 686   3                       b=10;
 687   3                       Bmp_Right_Disp1(0,0,Bmp10);
 688   3                       Bmp_Right_Disp1(4,0,Bmp4);
 689   3                       flag_3_up=0;
 690   3                       flag_3_dn=0;
 691   3                      }
 692   2                      else if(d==1&&e==1&&flag_up==0&&flag_dn==0&&(a==13||a==6)&&flag_door==0&&flag_keyoff==0)
 693   2                      {
 694   3                       d=4;
 695   3                       flag_up=1;
 696   3                       b=15;
 697   3                       Bmp_Right_Disp1(0,0,Bmp11);
 698   3                       Bmp_Right_Disp1(4,0,Bmp4);
 699   3                       flag_4_dn=0;
 700   3                      }
 701   2                      else if(d==2&&e==2&&flag_up==0&&flag_dn==0&&(a==12||a==7||a==8)&&flag_door==0&&flag_keyoff==0)
 702   2                      {
 703   3                       d=3;
 704   3                       flag_up=1;
 705   3                       b=5;
 706   3                       Bmp_Right_Disp1(0,0,Bmp10);
 707   3                       Bmp_Right_Disp1(4,0,Bmp4);
 708   3                       flag_3_up=0;
 709   3                       flag_3_dn=0;
 710   3                      }
 711   2                      else if(d==2&&e==2&&flag_up==0&&flag_dn==0&&(a==13||a==6)&&flag_door==0&&flag_keyoff==0)
 712   2                      {
 713   3                       d=4;
 714   3                       flag_up=1;
 715   3                       b=10;
 716   3                       Bmp_Right_Disp1(0,0,Bmp11);
 717   3                       Bmp_Right_Disp1(4,0,Bmp4);
 718   3                       flag_4_dn=0;
 719   3                      }
 720   2                      else if(d==3&&e==3&&flag_up==0&&flag_dn==0&&(a==13||a==6)&&flag_door==0&&flag_keyoff==0)
 721   2                      {
 722   3                       d=4;
 723   3                       flag_up=1;
 724   3                       b=5;
 725   3                       Bmp_Right_Disp1(0,0,Bmp11);
 726   3                       Bmp_Right_Disp1(4,0,Bmp4);
 727   3                       flag_4_dn=0;
 728   3                      }
 729   2                      else if(d==4&&e==4&&flag_up==0&&flag_dn==0&&(a==12||a==7||a==8)&&flag_door==0&&flag_keyoff==0)
 730   2                      {
 731   3                       d=3;
 732   3                       flag_dn=1;
 733   3                       c=5;
 734   3                       Bmp_Right_Disp1(0,0,Bmp10);
 735   3                       Bmp_Right_Disp1(4,0,Bmp5);
 736   3                       flag_3_up=0;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 13  

 737   3                       flag_3_dn=0;
 738   3                      }
 739   2                      else if(d==4&&e==4&&flag_up==0&&flag_dn==0&&(a==2||a==9||a==10)&&flag_door==0&&flag_keyoff==0)
 740   2                      {
 741   3                       d=2;
 742   3                       flag_dn=1;
 743   3                       c=10;
 744   3                       Bmp_Right_Disp1(0,0,Bmp9);
 745   3                       Bmp_Right_Disp1(4,0,Bmp5);
 746   3                       flag_2_up=0;
 747   3                       flag_2_dn=0;
 748   3                      }
 749   2                      else if(d==4&&e==4&&flag_up==0&&flag_dn==0&&(a==1||a==11)&&flag_door==0&&flag_keyoff==0)
 750   2                      {
 751   3                       d=1;
 752   3                       flag_dn=1;
 753   3                       c=15;
 754   3                       Bmp_Right_Disp1(0,0,Bmp8);
 755   3                       Bmp_Right_Disp1(4,0,Bmp5);
 756   3                       flag_1_up=0;
 757   3                      }
 758   2                      else if(d==3&&e==3&&flag_up==0&&flag_dn==0&&(a==2||a==9||a==10)&&flag_door==0&&flag_keyoff==0)
 759   2                      {
 760   3                       d=2;
 761   3                       flag_dn=1;
 762   3                       c=5;
 763   3                       Bmp_Right_Disp1(0,0,Bmp9);
 764   3                       Bmp_Right_Disp1(4,0,Bmp5);
 765   3                       flag_2_up=0;
 766   3                       flag_2_dn=0;
 767   3                      }
 768   2                      else if(d==3&&e==3&&flag_up==0&&flag_dn==0&&(a==1||a==11)&&flag_door==0&&flag_keyoff==0)
 769   2                      {
 770   3                       d=1;
 771   3                       flag_dn=1;
 772   3                       c=10;
 773   3                       Bmp_Right_Disp1(0,0,Bmp8);
 774   3                       Bmp_Right_Disp1(4,0,Bmp5);
 775   3                       flag_1_up=0;
 776   3                      }
 777   2                      else if(d==2&&e==2&&flag_up==0&&flag_dn==0&&(a==1||a==11)&&flag_door==0&&flag_keyoff==0)
 778   2                      {
 779   3                       d=1;
 780   3                       flag_dn=1;
 781   3                       c=5;
 782   3                       Bmp_Right_Disp1(0,0,Bmp8);
 783   3                       Bmp_Right_Disp1(4,0,Bmp5);
 784   3                       flag_1_up=0;
 785   3                      }
 786   2      
 787   2                      
 788   2                      if(d==4&&e==4&&flag_door==0&&(flag_3_up==1||flag_3_dn==1))
 789   2                      {
 790   3                       d=3;
 791   3                       flag_dn=1;
 792   3                       c=5;
 793   3                       Bmp_Right_Disp1(0,0,Bmp10);
 794   3                       Bmp_Right_Disp1(4,0,Bmp5);
 795   3                       
 796   3                       flag_3_up=0;
 797   3                       flag_3_dn=0;
 798   3                      }
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 14  

 799   2                      else if(d==4&&e==4&&flag_door==0&&(flag_2_up==1||flag_2_dn==1))
 800   2                      {
 801   3                       d=2;
 802   3                       flag_dn=1;
 803   3                       c=10;
 804   3                       Bmp_Right_Disp1(0,0,Bmp9);
 805   3                       Bmp_Right_Disp1(4,0,Bmp5);
 806   3                       flag_2_up=0;
 807   3                       flag_2_dn=0;
 808   3                      }
 809   2              
 810   2                      else if(d==4&&e==4&&flag_door==0&&(flag_1_up==1))
 811   2                      {
 812   3                       d=1;
 813   3                       flag_dn=1;
 814   3                       c=15;
 815   3                       Bmp_Right_Disp1(0,0,Bmp8);
 816   3                       Bmp_Right_Disp1(4,0,Bmp5);
 817   3                       flag_1_up=0;
 818   3                      }
 819   2                      else if(d==3&&e==3&&flag_door==0&&(flag_4_dn==1))
 820   2                      {
 821   3                       d=4;
 822   3                       flag_up=1;
 823   3                       b=5;
 824   3                       Bmp_Right_Disp1(0,0,Bmp11);
 825   3                       Bmp_Right_Disp1(4,0,Bmp4);
 826   3                       flag_4_dn=0;
 827   3                      }
 828   2                      else if(d==3&&e==3&&flag_door==0&&(flag_2_up==1||flag_2_dn==1))
 829   2                      {
 830   3                       d=2;
 831   3                       flag_dn=1;
 832   3                       c=5;
 833   3                       Bmp_Right_Disp1(0,0,Bmp9);
 834   3                       Bmp_Right_Disp1(4,0,Bmp5);
 835   3                       flag_2_up=0;
 836   3                       flag_2_dn=0;
 837   3                      }
 838   2                      else if(d==3&&e==3&&flag_door==0&&(flag_1_up==1))
 839   2                      {
 840   3                       d=1;
 841   3                       flag_dn=1;
 842   3                       c=10;
 843   3                       Bmp_Right_Disp1(0,0,Bmp8);
 844   3                       Bmp_Right_Disp1(4,0,Bmp5);
 845   3                       flag_1_up=0;
 846   3                      }
 847   2                      else if(d==2&&e==2&&flag_door==0&&(flag_4_dn==1))
 848   2                      {
 849   3                       d=4;
 850   3                       flag_up=1;
 851   3                       b=10;
 852   3                       Bmp_Right_Disp1(0,0,Bmp11);
 853   3                       Bmp_Right_Disp1(4,0,Bmp4);
 854   3                       flag_4_dn=0;
 855   3                      }
 856   2                       else if(d==2&&e==2&&flag_door==0&&(flag_3_up==1||flag_3_dn==1))
 857   2                      {
 858   3                       d=3;
 859   3                       flag_up=1;
 860   3                       b=5;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 15  

 861   3                       Bmp_Right_Disp1(0,0,Bmp10);
 862   3                       Bmp_Right_Disp1(4,0,Bmp4);
 863   3                       flag_3_up=0;
 864   3                       flag_3_dn=0;
 865   3                      }
 866   2                      else if(d==2&&e==2&&flag_door==0&&(flag_1_up==1))
 867   2                      {
 868   3                       d=1;
 869   3                       flag_dn=1;
 870   3                       c=5;
 871   3                       Bmp_Right_Disp1(0,0,Bmp8);
 872   3                       Bmp_Right_Disp1(4,0,Bmp5);
 873   3                       flag_1_up=0;
 874   3                       
 875   3                      }
 876   2                      else if(d==1&&e==1&&flag_door==0&&(flag_2_up==1||flag_2_dn==1))
 877   2                      {
 878   3                       d=2;
 879   3                       flag_up=1;
 880   3                       b=5;
 881   3                       Bmp_Right_Disp1(0,0,Bmp9);
 882   3                       Bmp_Right_Disp1(4,0,Bmp4);
 883   3                       flag_2_up=0;
 884   3                       flag_2_dn=0;
 885   3                      }
 886   2                      else if(d==1&&e==1&&flag_door==0&&(flag_3_up==1||flag_3_dn==1))
 887   2                      {
 888   3                       d=3;
 889   3                       flag_up=1;
 890   3                       b=10;
 891   3                       Bmp_Right_Disp1(0,0,Bmp10);
 892   3                       Bmp_Right_Disp1(4,0,Bmp4);
 893   3                       flag_3_up=0;
 894   3                       flag_3_dn=0;
 895   3                      }
 896   2                      else if(d==1&&e==1&&flag_door==0&&(flag_4_dn==1))
 897   2                      {
 898   3                       d=4;
 899   3                       flag_up=1;
 900   3                       b=15;
 901   3                       Bmp_Right_Disp1(0,0,Bmp11);
 902   3                       Bmp_Right_Disp1(4,0,Bmp4);
 903   3                       flag_4_dn=0;
 904   3                       
 905   3                      }
 906   2      
 907   2                 
 908   2      
 909   2                      if(b)
 910   2                      {
 911   3                              if(Num0<200)
 912   3                              {
 913   4                                      IN1=1;
 914   4                                      IN2=0; 
 915   4                                      IN3=1;
 916   4                                      IN4=1;          
 917   4                              }
 918   3                              else if(Num0<400)
 919   3                              {
 920   4                                      IN1=0;
 921   4                                      IN2=1; 
 922   4                                      IN3=1;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 16  

 923   4                                      IN4=1;          
 924   4                              }
 925   3                              else if(Num0<600)
 926   3                              {
 927   4                                      IN1=1;
 928   4                                      IN2=1; 
 929   4                                      IN3=1;
 930   4                                      IN4=0;          
 931   4                              }
 932   3                              else if(Num0<800)
 933   3                              {
 934   4                                      IN1=1;
 935   4                                      IN2=1; 
 936   4                                      IN3=0;
 937   4                                      IN4=1;
 938   4                                                      
 939   4                              }
 940   3                              else if(Num0>=800)
 941   3                              {
 942   4                                      Num0=0;
 943   4                                      if(b>0)
 944   4                                      b--;
 945   4                                      m++;
 946   4                                      if(m==5)
 947   4                                      {
 948   5                                      m=0;
 949   5                                      e=e+1;
 950   5                                      if(e==2)
 951   5                                      Bmp_Right_Disp1(2,0,Bmp9);
 952   5                                      else if(e==3)
 953   5                                      Bmp_Right_Disp1(2,0,Bmp10);
 954   5                                      else if(e==4)
 955   5                                      Bmp_Right_Disp1(2,0,Bmp11);
 956   5                                      if(b!=0&&flag_2_up==1&&e==2)
 957   5                                      {
 958   6                                       flag_bb=1;
 959   6                                       bb=b;
 960   6                                       b=0;
 961   6                                       flag_2_up=0;
 962   6                                      }
 963   5                                      if(b!=0&&flag_3_up==1&&e==3)
 964   5                                      {
 965   6                                       flag_bb=1;
 966   6                                       bb=b;
 967   6                                       b=0;
 968   6                                       flag_3_up=0;
 969   6                                      }
 970   5      
 971   5      
 972   5                                      }
 973   4      
 974   4      
 975   4                                      if(b==0)
 976   4                                      {
 977   5      
 978   5                                              IN1=1;
 979   5                                              IN2=1; 
 980   5                                              IN3=1;
 981   5                                              IN4=1;
 982   5                                              Bmp_Right_Disp1(4,0,Bmp12);
 983   5                                              Bmp_Right_Disp1(6,0,Bmp6);
 984   5                                              flag_door=1;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 17  

 985   5                                              Num2=5000;
 986   5                                              flag_up=0;
 987   5      
 988   5                                                                      
 989   5                                      }
 990   4                              }
 991   3                      }
 992   2      
 993   2                      if(c)
 994   2                      {
 995   3                              if(Num0<200)
 996   3                              {
 997   4                                      IN1=1;
 998   4                                      IN2=1; 
 999   4                                      IN3=0;
1000   4                                      IN4=1;          
1001   4                              }
1002   3                              else if(Num0<400)
1003   3                              {
1004   4                                      IN1=1;
1005   4                                      IN2=1; 
1006   4                                      IN3=1;
1007   4                                      IN4=0;          
1008   4                              }
1009   3                              else if(Num0<600)
1010   3                              {
1011   4                                      IN1=0;
1012   4                                      IN2=1; 
1013   4                                      IN3=1;
1014   4                                      IN4=1;          
1015   4                              }
1016   3                              else if(Num0<800)
1017   3                              {
1018   4                                      IN1=1;
1019   4                                      IN2=0; 
1020   4                                      IN3=1;
1021   4                                      IN4=1;
1022   4                                                      
1023   4                              }
1024   3                              else if(Num0>=800)
1025   3                              {
1026   4                                      Num0=0;
1027   4                                      if(c>0)
1028   4                                      c--;
1029   4                                      m++;
1030   4                                      if(m==5)
1031   4                                      {
1032   5                                      m=0;
1033   5                                      if(e>1)
1034   5                                      e=e-1;
1035   5                                      if(e==2)
1036   5                                      Bmp_Right_Disp1(2,0,Bmp9);
1037   5                                      else if(e==3)
1038   5                                      Bmp_Right_Disp1(2,0,Bmp10);
1039   5                                      else if(e==1)
1040   5                                      Bmp_Right_Disp1(2,0,Bmp8);
1041   5                                      if(c!=0&&flag_2_dn==1&&e==2)
1042   5                                      {
1043   6                                       flag_cc=1;
1044   6                                       cc=c;
1045   6                                       c=0;
1046   6                                       flag_2_dn=0;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 18  

1047   6                                      }
1048   5                                      if(c!=0&&flag_3_dn==1&&e==3)
1049   5                                      {
1050   6                                       flag_cc=1;
1051   6                                       cc=c;
1052   6                                       c=0;
1053   6                                       flag_3_dn=0;
1054   6                                      }
1055   5                                      }
1056   4                                      if(c==0)
1057   4                                      {
1058   5                                              IN1=1;
1059   5                                              IN2=1; 
1060   5                                              IN3=1;
1061   5                                              IN4=1;
1062   5                                              Bmp_Right_Disp1(4,0,Bmp12);
1063   5                                              Bmp_Right_Disp1(6,0,Bmp6);
1064   5                                              flag_door=1;
1065   5                                              Num2=5000;
1066   5                                              flag_dn=0;
1067   5      
1068   5                                               
1069   5                                              
1070   5                                                                              
1071   5                                      }
1072   4                              }
1073   3                      }
1074   2      
1075   2      
1076   2      
1077   2                       //if(a==6)
1078   2                       //{
1079   2                       //     Bmp_Right_Disp1(0,0,Bmp11);
1080   2                       //}
1081   2      
1082   2                      
1083   2      
1084   2      
1085   2                      if(a==3)
1086   2                      {               
1087   3                              LED_BJ=0;
1088   3                              flag0=1;
1089   3                              flag1=1;                
1090   3                      }
1091   2                      if(key2==0)             
1092   2                      flag0=1;
1093   2                      else if(key2==1&&flag1==0)
1094   2                      flag0=0;
1095   2      
1096   2                      if(flag_up==1&&flag_dn==0)
1097   2                      {
1098   3                              led_up=0 ;
1099   3                              led_dn=1 ;              
1100   3                      }
1101   2                      else if(flag_up==0&&flag_dn==1)
1102   2                      {
1103   3                              led_up=1 ;
1104   3                              led_dn=0 ;              
1105   3                      }
1106   2                      else if(flag_up==0&&flag_dn==0)
1107   2                      {
1108   3                              led_up=1 ;
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 19  

1109   3                              led_dn=1 ;              
1110   3                      }
1111   2      
1112   2                      
1113   2              }
1114   1      }
1115           void T0zd(void) interrupt 1      //3定时器1的中断号  1定时器0的中断号 0外部中断1 2外部中断2  4串口中断
1116          {
1117   1      
1118   1               
1119   1               TH0 = (8192 - 1000)/32;
1120   1               TL0 = (8192 - 1000)%32;  
1121   1                       
1122   1               Num0++;
1123   1               Num1++;
1124   1               if(d!=1&&e!=1&&d==e&&flag_door==0)
1125   1               Num3++;
1126   1               else 
1127   1               Num3=0;
1128   1               if(Num3>85000)  //10秒回到一层
1129   1               {
1130   2                      flag_2_up=0;
1131   2                      flag_2_dn=0;
1132   2                      flag_3_up=0;
1133   2                      flag_3_dn=0;
1134   2                      Num3=0;
1135   2                      d=1;
1136   2                      flag_dn=1;
1137   2                      if(e==4)
1138   2                      c=15;
1139   2                      else if(e==3)
1140   2                      c=10;
1141   2                      else if(e==2)
1142   2                      c=5;
1143   2                      Bmp_Right_Disp1(0,0,Bmp8);
1144   2                      Bmp_Right_Disp1(4,0,Bmp5);
1145   2               }
1146   1      
1147   1      
1148   1      
1149   1               if(Num2>0)
1150   1               {
1151   2               Num2--;
1152   2               if(Num2==0)
1153   2               {
1154   3                      flag_door=0;
1155   3      
1156   3                      Bmp_Right_Disp1(6,0,Bmp7);
1157   3                      if(flag_bb==1)
1158   3                      {
1159   4                              b=bb;
1160   4                              bb=0;
1161   4                              flag_up=1;
1162   4                              Bmp_Right_Disp1(4,0,Bmp4);
1163   4                              flag_bb=0;
1164   4                      }
1165   3                      else if(flag_cc==1)
1166   3                      {
1167   4                              c=cc;
1168   4                              cc=0;
1169   4                              flag_dn=1;
1170   4                              Bmp_Right_Disp1(4,0,Bmp5);
C51 COMPILER V8.08   LED                                                                   06/23/2018 08:43:33 PAGE 20  

1171   4                              flag_cc=0;
1172   4                      }
1173   3               }
1174   2               }
1175   1      
1176   1               if(Num1<300)
1177   1               {
1178   2               if(flag0==1)
1179   2               bell=~bell;
1180   2               }
1181   1               else if(Num1<1000)
1182   1               bell=1;
1183   1               if(Num1>1000)
1184   1               Num1=0;
1185   1      
1186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3334    ----
   CONSTANT SIZE    =   1792    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     22    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
